#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤

echo "üê≥ Docker build script for Coming Soon"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ–º–æ—â–∏
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  build     - –°–æ–±—Ä–∞—Ç—å production –æ–±—Ä–∞–∑"
    echo "  build-dev - –°–æ–±—Ä–∞—Ç—å development –æ–±—Ä–∞–∑"
    echo "  up        - –ó–∞–ø—É—Å—Ç–∏—Ç—å production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    echo "  up-dev    - –ó–∞–ø—É—Å—Ç–∏—Ç—å development –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    echo "  down      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    echo "  logs      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo "  shell     - –û—Ç–∫—Ä—ã—Ç—å shell –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
    echo "  help      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 build && $0 up"
    echo "  $0 up-dev"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ production –æ–±—Ä–∞–∑–∞
build_production() {
    echo "üî® –°–±–æ—Ä–∫–∞ production –æ–±—Ä–∞–∑–∞..."
    docker build -t coming-soon:latest .
    echo "‚úÖ Production –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ development –æ–±—Ä–∞–∑–∞
build_dev() {
    echo "üî® –°–±–æ—Ä–∫–∞ development –æ–±—Ä–∞–∑–∞..."
    docker build -f Dockerfile.dev -t coming-soon:dev .
    echo "‚úÖ Development –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
run_production() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose up -d
    echo "‚úÖ Production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã!"
    echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3000"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ development –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
run_dev() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ development –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose -f docker-compose.dev.yml up -d
    echo "‚úÖ Development –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã!"
    echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3000"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
stop_containers() {
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose down
    docker-compose -f docker-compose.dev.yml down
    echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤
show_logs() {
    echo "üìã –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose logs -f
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è shell –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
open_shell() {
    echo "üêö –û—Ç–∫—Ä—ã—Ç–∏–µ shell –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
    docker exec -it coming-soon-app /bin/sh
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-help}" in
    "build")
        build_production
        ;;
    "build-dev")
        build_dev
        ;;
    "up")
        build_production
        run_production
        ;;
    "up-dev")
        build_dev
        run_dev
        ;;
    "down")
        stop_containers
        ;;
    "logs")
        show_logs
        ;;
    "shell")
        open_shell
        ;;
    "help"|*)
        show_help
        ;;
esac
